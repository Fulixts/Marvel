@using Tools.Models;
@model IEnumerable<Marvel.Models.Character>

@{
    ViewData["Title"] = "Heroes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SortModel sort = (SortModel)ViewData["sort"];

    PagerModel pager = ViewBag.Pager;
}

<style>
    #botBar {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: baseline;
        justify-content: center;
    }
</style>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <h1>Heroes</h1>
                <div class="search-single">
                    @using (Html.BeginForm("GetCharacter", "Characters", FormMethod.Get))
                    {
                        <input type="text" name="GetCharacter" placeholder="Search" />
                        <input type="submit" value="Submit" />
                    }
                    <div class="p">
                        <p>Only 5 Characters can be Favorite</p>
                        <p>If you Favorite with more than 5 he will disregard and not mark as Favorite</p>
                    </div>
                </div>
                <table class="table" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                <a asp-action="Index" asp-route-sortExpression="@sort.GetColumn("id").SortExpression">
                                    @Html.DisplayNameFor(model => model.Id)
                                </a>
                                <i class="@sort.GetColumn("id").SortIcon" arial-hidden="true"></i>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortExpression="@sort.GetColumn("name").SortExpression">
                                    @Html.DisplayNameFor(model => model.Name)
                                </a>
                                <i class="@sort.GetColumn("name").SortIcon" arial-hidden="true"></i>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortExpression="@sort.GetColumn("favorite").SortExpression">
                                    @Html.DisplayNameFor(model => model.Favorite)
                                </a>
                                <i class="@sort.GetColumn("favorite").SortIcon" arial-hidden="true"></i>
                            </th>
                            <th>
                                Options
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Favorite)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-12" id="botBar">
                <partial name="_showItems" model="@pager" />
                <partial name="_pagerBar" model="@pager" />
            </div>
        </div>
    </div>
</body>
</html>